<UserControl x:Class="NetworkPlanning.Views.NetworkGridControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:b="clr-namespace:NetworkPlanning.Behaviour"
             mc:Ignorable="d">

    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button Grid.Row="0" Content="Add Event"
                Command="{Binding AppCommands.AddEventCommand}" />

        <DataGrid Grid.Row="1"
                  AutoGenerateColumns="False"
                  RowHeaderWidth="0"
                  ItemsSource="{Binding Works}"
                  CanUserResizeRows="False"
                  CanUserResizeColumns="False"
                  CanUserReorderColumns="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  SelectionMode="Single">

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Background="CadetBlue" x:Name="GroupHeader">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Content="-"
                                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                                        Command="{Binding AppCommands.DeleteEventCommand}"
                                        CommandParameter="{Binding DataContext.Name, ElementName=GroupHeader}" />
                                <Button Grid.Column="1"
                                        Background="CadetBlue"
                                        DataContext="{Binding ElementName=Root, Path=DataContext}"
                                        Command="{Binding AppCommands.AddWorkCommand}"
                                        CommandParameter="{Binding DataContext.Name, ElementName=GroupHeader}">
                                    <TextBlock FontWeight="Bold">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}Event: {0}">
                                                <Binding Path="DataContext.Name" ElementName="GroupHeader" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn Width="*" Header="StartEvent">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox Name="StartEventBox"
                                      ItemsSource="{Binding AvailableStartEvents}"
                                      Validation.ErrorTemplate="{StaticResource ValidationFailed}">
                                <ComboBox.SelectedItem>
                                    <Binding Path="StartEvent"
                                             NotifyOnValidationError="True"
                                             UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <DataErrorValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*" Header="Duration">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Duration}"
                                     MaxLength="4">
                                <i:Interaction.Behaviors>
                                    <b:TextBoxInputValidationBehavior Regexp="^0$|^[1-9][0-9]*$"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*" Header="Work Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox TextWrapping="WrapWithOverflow"
                                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="-"
                                    Command="{Binding AppCommands.DeleteWorkCommand}"
                                    CommandParameter="{Binding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
    </Grid>
</UserControl>